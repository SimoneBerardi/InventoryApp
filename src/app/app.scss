// http://ionicframework.com/docs/v2/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
* {
    font-family: Calibri, Candara, Segoe, Segoe UI, Optima, Arial, sans-serif;
}

body {
    --base-color: #333333;
    --contrast-color: #D3B158;
}

@mixin componentStyle($isInverted) {
    @if $isInverted {
        background-color: var(--contrast-color);
        color: var(--base-color);
        stroke: var(--base-color);
    }
    @else {
        background-color: var(--base-color);
        color: var(--contrast-color);
        stroke: var(--contrast-color);
    }
}

.component-style {
    @include componentStyle(false);
}

.component-inverted-style {
    @include componentStyle(true);
}

button.button {
    border-color: inherit;
    border: 2px solid;
    background-color: inherit;
    color: inherit;
    box-shadow: none;
    text-transform: none;
    &.activated {
        background-color: inherit;
        color: inherit;
    }
    &:hover:not(.disable-hover) {
        background-color: inherit;
    }
    .button-icon {
        width: 20px;
        height: 20px;
        margin-right: 5px;
    }
}

ion-alert .alert-wrapper {
    background-color: var(--base-color);
    color: var(--contrast-color);
    * {
        background-color: var(--base-color);
        color: var(--contrast-color);
    }
    .alert-message {
        color: inherit;
    }
    .alert-radio-group {
        border-color: var(--contrast-color);
        .alert-radio-label {
            color: inherit;
        }
        button[aria-checked=true] {
            .alert-radio-label {
                color: inherit;
            }
            .alert-radio-icon {
                border-color: var(--contrast-color);
            }
            .alert-radio-inner {
                background-color: var(--contrast-color);
            }
        }
    }
}

ion-loading .loading-wrapper {
    background-color: var(--base-color) !important;
    color: var(--contrast-color) !important;
    * {
        background-color: var(--base-color);
        color: var(--contrast-color);
    }
    .spinner-crescent circle {
        stroke: var(--contrast-color);
    }
}

ion-action-sheet .action-sheet-group {
    background-color: var(--base-color) !important;
    color: var(--contrast-color) !important;
    * {
        background-color: var(--base-color);
        color: var(--contrast-color);
    }
    .action-sheet-title {
        background-color: inherit;
        color: inherit;
        border-bottom: 2px solid;
        text-transform: uppercase;
    }
}

ion-spinner.spinner {
    margin: auto;
    display: block;
    width: 50px;
    height: 50px;
    circle {
        stroke: inherit;
    }
}

ion-toggle.toggle {
    .toggle-icon {
        background-color: var(--contrast-color);
        &::before {
            background-color: var(--base-color);
        }
    }
    &.toggle-checked .toggle-icon {
        background-color: var(--contrast-color);
    }
    .toggle-inner {
        background-color: var(--base-color);
    }
}

ion-fab {
    .fab {
        &.activated {
            background: inherit;
            color: inherit;
        }
        .icon {
            font-size: 3.5rem;
        }
    }
}

.content {
    .item,
    .label,
    .item-inner,
    .note,
    p,
    .checkbox-icon,
    .checkbox-inner {
        background-color: inherit;
        color: inherit;
        border-color: inherit !important;
        box-shadow: none !important;
    }
    .select-icon-inner {
        color: inherit !important;
    }
}

.weight {
    &.large {
        font-size: 2rem !important;
        text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
        font-weight: bold;
    }
    &.not-encumbered {
        color: color($colors, status_green);
    }
    &.encumbered {
        color: color($colors, status_orange);
    }
    &.heavily-encumbered {
        color: color($colors, status_red);
    }
    &.over-max-carry {
        color: color($colors, status_red);
    }
}

.icon.custom-icon {
    min-width: 24px;
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
}